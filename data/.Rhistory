filter(user == neki) %>%
mutate(jelszo_most = pw) %>%
filter(row_number() == 1)
p
login_ret <- mek_login(temp_username = p$user, temp_password = "Vajszló2021!", honnan = "update_actual_passwords - login_ret")
login_ret$login_successful
shiny::runApp('C:/szolnokiendre_1drv/OneDrive/products/biogaz_asema/asema')
install.packages("imputeLCMD")
library(imputeLCMD)
impute.MAR.MNAR
library(imputeLCMD)
library(tidyverse)
mutate
library(RMySQL)
library(tidyverse)
connect_qq <- function(){
qq <- dbConnect(MySQL(),
user = "kapacita_app2user", password = "85endreX",
dbname = "kapacita_app2",
host = "92.52.223.20", port = 3306)
# dbListTables(qq)
return(qq)
}
con <- connect_qq()
data <- dbGetQuery(con, "select * from final_profil_elemzes")
data
df_adat <- dbGetQuery(con, "select * from final_profil_elemzes")
View(df_adat)
temp_eromu_id = 1
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id)
View(df_to_plot)
ggplot(df_to_plot, aes(position, load_kw)) +
geom_point()
ggplot(df_to_plot, aes(position, load_kw, color = idozona)) +
geom_point()
ggplot(df_to_plot, aes(position, load_kw, color = idozona)) +
geom_point() +
facet_wrap(idozona ~ .)
ggplot(df_to_plot, aes(position, load_kw, color = idozona)) +
stat_density() +
facet_wrap(idozona ~ .)
ggplot(df_to_plot, aes(y = load_kw, color = idozona)) +
stat_density() +
facet_wrap(idozona ~ .)
df_max <- dbGetQuery(con, "select eromu_id, max_value, kat from dashboard_core_eromu")
df_max <- dbGetQuery(con, "select id as eromu_id, max_value, kat from dashboard_core_eromu")
df_max
dbDisconnect(con)
egy_eromu_abra <- function(temp_eromu_id = 1){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, color = idozona)) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1])
}
egy_eromu_abra(1)
egy_eromu_abra(2)
temp_eromu_id = 2
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, color = idozona)) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1])
ggplot(df_to_plot, aes(y = load_kw, color = idozona)) +
geom_hline(yintercept = df_to_plot$max_value[1])
ggplot(df_to_plot, aes(y = load_kw, color = idozona)) +
geom_hline(yintercept = df_to_plot$max_value[1]) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1])
ggplot(df_to_plot, aes(y = load_kw, color = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1])
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1])
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ .) +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
}
egy_eromu_abra(2)
egy_eromu_abra(3)
egy_eromu_abra(4)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ ., scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ ., scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
}
egy_eromu_abra(4)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_wrap(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
}
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]")
}
egy_eromu_abra(1)
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max)
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]") +
theme(axis.text.x = element_blank())
}
egy_eromu_abra(1)
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]") +
theme(axis.text.x = element_blank())
}
egy_eromu_abra(1)
egy_eromu_abra(2)
egy_eromu_abra(4)
egy_eromu_abra(5)
egy_eromu_abra(6)
egy_eromu_abra(7)
egy_eromu_abra(9)
egy_eromu_abra(10)
egy_eromu_abra(11)
egy_eromu_abra(12)
library(tidyverse)
library(RMySQL)
connect_qq <- function(){
qq <- dbConnect(MySQL(),
user = "kapacita_app2user", password = "85endreX",
dbname = "kapacita_app2",
host = "92.52.223.20", port = 3306)
# dbListTables(qq)
return(qq)
}
con <- connect_qq()
df_adat <- dbGetQuery(con, "select * from final_profil_elemzes")
df_max <- dbGetQuery(con, "select id as eromu_id, max_value, kat from dashboard_core_eromu")
dbDisconnect(con)
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]") +
theme(axis.text.x = element_blank())
}
egy_eromu_abra(1)
egy_eromu_abra(2)
egy_eromu_abra(4)
egy_eromu_abra(5)
egy_eromu_abra(6)
egy_eromu_abra(7)
egy_eromu_abra(9)
egy_eromu_abra(10)
egy_eromu_abra(11)
egy_eromu_abra(12)
shiny::runApp('C:/szolnokiendre_1drv/OneDrive/products/biogaz_asema/asema')
shiny::runApp('C:/szolnokiendre_1drv/OneDrive/products/biogaz_asema/asema')
library(tidyverse)
library(RMySQL)
connect_qq <- function(){
qq <- dbConnect(MySQL(),
user = "kapacita_app2user", password = "85endreX",
dbname = "kapacita_app2",
host = "92.52.223.20", port = 3306)
# dbListTables(qq)
return(qq)
}
con <- connect_qq()
df_adat <- dbGetQuery(con, "select * from final_profil_elemzes")
df_max <- dbGetQuery(con, "select id as eromu_id, max_value, kat from dashboard_core_eromu")
dbDisconnect(con)
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]") +
theme(axis.text.x = element_blank())
}
egy_eromu_abra(1)
df_e <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
temp_eromu_id = 1
df_e <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
View(df_e)
last_sunday <- function(y, m) {
if (m == 12) {
date <- as.Date(paste0(y,"-",12,"-",31))
} else {
date <- as.Date(paste0(y,"-",m+1,"-",1))-1
}
while (weekdays(date) != "Sunday") {
date <- date - 1
}
return(date)
}
library(tidyverse)
library(RMySQL)
connect_qq <- function(){
qq <- dbConnect(MySQL(),
user = "kapacita_app2user", password = "85endreX",
dbname = "kapacita_app2",
host = "92.52.223.20", port = 3306)
# dbListTables(qq)
return(qq)
}
last_sunday <- function(y, m) {
if (m == 12) {
date <- as.Date(paste0(y,"-",12,"-",31))
} else {
date <- as.Date(paste0(y,"-",m+1,"-",1))-1
}
while (weekdays(date) != "Sunday") {
date <- date - 1
}
return(date)
}
convert_pos_to_hm <- function(pos, date){
}
con <- connect_qq()
df_adat <- dbGetQuery(con, "select * from final_profil_elemzes")
df_max <- dbGetQuery(con, "select id as eromu_id, max_value, kat from dashboard_core_eromu")
dbDisconnect(con)
egy_eromu_abra <- function(temp_eromu_id = 2){
df_to_plot <- df_adat %>%
filter(eromu_id == temp_eromu_id) %>%
left_join(df_max) %>%
mutate(munkanap = ifelse(munkanap==1, "Munkanap", "Szabadnap"))
ggplot(df_to_plot, aes(y = load_kw, fill = idozona)) +
geom_hline(yintercept = c(0, df_to_plot$max_value[1])) +
stat_density() +
facet_grid(idozona ~ munkanap, scales = 'free_x') +
labs(title = df_to_plot$kat[1],
fill = "Időzóna",
x = "Relatív gyakoriság",
y = "Termelés [kW]") +
theme(axis.text.x = element_blank())
}
# egy_eromu_abra(1)
library(lubridate)
date = "2021-04-02"
date = as.Date("2021-04-02")
is_last_sunday = last_sunday(year(date), month(date))
is_last_sunday
y=year(date)
m=month(date)
date <- as.Date(paste0(y,"-",m+1,"-",1))-1
date
date <- as.Date(paste0(y,"-",m+1,"-",1))-1
date
weekdays(date)
while (weekdays(date) != "vasárnap") {
date <- date - 1
}
date
last_sunday <- function(y, m) {
if (m == 12) {
date <- as.Date(paste0(y,"-",12,"-",31))
} else {
date <- as.Date(paste0(y,"-",m+1,"-",1))-1
}
while (weekdays(date) != "vasárnap") {
date <- date - 1
}
return(date)
}
is_last_sunday = last_sunday(y=year(date), m=month(date))
is_last_sunday
last_sunday = last_sunday(y=year(date), m=month(date))
last_sunday <- function(y, m) {
if (m == 12) {
date <- as.Date(paste0(y,"-",12,"-",31))
} else {
date <- as.Date(paste0(y,"-",m+1,"-",1))-1
}
while (weekdays(date) != "vasárnap") {
date <- date - 1
}
return(date)
}
that_last_sunday = last_sunday(y=year(date), m=month(date))
date
date = as.Date("2021-04-02")
that_last_sunday = last_sunday(y=year(date), m=month(date))
t <- "SMS teszt: KapacitásEnergia menetrend módosítást kérvényezett"
nchar(t)
URLencode(t)
library(tidyverse)
library(geodist)
options(scipen = 999)
folder <- 'C:/szolnokiendre_1drv/OneDrive/learning/marineShiny/app/data'
setwd(folder)
csv_data_file <- 'ships.csv'
df <- read.csv(csv_data_file)
out <- df %>%
mutate(obs_id = row_number(),
ts = as.POSIXct(DATETIME,
format="%Y-%m-%dT%H:%M:%OSZ", tz="GMT")) %>%
select(obs_id, ts, SHIPNAME, ship_type, LAT, LON) %>%
arrange(SHIPNAME, ts) %>%
group_by(SHIPNAME) %>%
mutate(prev_LAT = lag(LAT, 1L, default = NA),
prev_LON = lag(LON, 1L, default = NA),
diff_LAT = LAT - prev_LAT,
diff_LON = LON - prev_LON,
dist_m = geodist::geodist_vec(x1 = LON, y1 = LAT,
x2 = prev_LON, y2 = prev_LAT,
paired = T,
sequential = F,
measure = 'geodesic')) %>%
ungroup() %>%
rename(ship_name = SHIPNAME)
ships_data <- out %>%
select(ship_name, ship_type, ts, dist_m, LAT, LON, prev_LAT, prev_LON) %>%
arrange(ship_name, ship_type, desc(dist_m), desc(ts)) %>%
group_by(ship_name) %>%
filter(row_number() == 1) %>%
ungroup()
ship_markers <- ships_data %>%
select(ship_name, ship_type, dist_m, LAT, LON, prev_LAT, prev_LON) %>%
rename(lat_from = prev_LAT,
lat_to = LAT,
lon_from = prev_LON,
lon_to = LON) %>%
pivot_longer(cols = -(1:3),
names_to = 'var',
values_to = "val") %>%
mutate(latlon = str_match(var, "lat|lon")[,1],
fromto = str_match(var, "from|to")[,1]) %>%
select(-var) %>%
pivot_wider(id_cols = c(1,2,3,6),
names_from = latlon,
values_from = val) %>%
mutate(label_text = sprintf('%s position for vessel %s for largest distance route (%.0f meters).',
ifelse(fromto == 'from', 'Starting', 'End'),
ship_name,
dist_m),
popup_text = label_text,
distance_pretty = sprintf('Distance: %.0f meters', dist_m))
save(ship_markers,
file = "ships.Rdata")
library(shiny)
library(leaflet)
library(shiny.semantic)
library(shinyjs)
ship_markers <- ships_data %>%
select(ship_name, ship_type, dist_m, LAT, LON, prev_LAT, prev_LON) %>%
rename(lat_from = prev_LAT,
lat_to = LAT,
lon_from = prev_LON,
lon_to = LON) %>%
pivot_longer(cols = -(1:3),
names_to = 'var',
values_to = "val") %>%
mutate(latlon = str_match(var, "lat|lon")[,1],
fromto = str_match(var, "from|to")[,1]) %>%
select(-var) %>%
pivot_wider(id_cols = c(1,2,3,6),
names_from = latlon,
values_from = val) %>%
mutate(label_text = sprintf('%s position for vessel %s for largest distance route (%.0f meters).',
ifelse(fromto == 'from', 'Starting', 'End'),
ship_name,
dist_m),
popup_text = label_text,
distance_pretty = sprintf('%.0f', dist_m))
save(ship_markers,
file = "ships.Rdata")
ship_markers <- ships_data %>%
select(ship_name, ship_type, dist_m, LAT, LON, prev_LAT, prev_LON) %>%
rename(lat_from = prev_LAT,
lat_to = LAT,
lon_from = prev_LON,
lon_to = LON) %>%
pivot_longer(cols = -(1:3),
names_to = 'var',
values_to = "val") %>%
mutate(latlon = str_match(var, "lat|lon")[,1],
fromto = str_match(var, "from|to")[,1]) %>%
select(-var) %>%
pivot_wider(id_cols = c(1,2,3,6),
names_from = latlon,
values_from = val) %>%
mutate(label_text = sprintf('%s position for vessel %s for largest distance route (%.0f meters).',
ifelse(fromto == 'from', 'Starting', 'End'),
ship_name,
dist_m),
popup_text = label_text)
save(ship_markers,
file = "ships.Rdata")
?geodist::geodist
?format
?addTiles
??moduleServer
install.packages(c("shiny", "shinycssloaders", "shinyFeedback", "shinyjs", "shinyWidgets"))
install.packages(c("testthat", "tidyr", "tidyselect", "tidyverse"))
library(shiny)
please_select_type
